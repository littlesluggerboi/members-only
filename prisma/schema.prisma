// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Member {
  id       Int              @id @default(autoincrement())
  username String           @unique
  email    String           @unique
  password String
  clubs    ClubMembership[]
  messages ClubMessages[]
}

model Club {
  id            Int              @id @default(autoincrement())
  name          String
  description   String?
  created_at    DateTime         @default(now())
  club_approval ClubApproval?
  members       ClubMembership[]
  messages      ClubMessages[]
}

model ClubApproval {
  club_id  Int    @id
  club     Club   @relation(fields: [club_id], references: [id])
  question String
  answer   String
}

model ClubMembership {
  club_id   Int
  member_id Int
  club      Club    @relation(fields: [club_id], references: [id])
  member    Member  @relation(fields: [member_id], references: [id])
  is_admin  Boolean @default(false)

  @@id([club_id, member_id])
}

model ClubMessages {
  id        Int      @id @default(autoincrement())
  member_id Int
  member    Member   @relation(fields: [member_id], references: [id])
  club_id   Int
  club      Club     @relation(fields: [club_id], references: [id])
  message   String
  timestamp DateTime @default(now())
}
